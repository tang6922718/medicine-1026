<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.bonc.medicine.mapper.user.UserMapper">



	<!--用户注册:用户基本信息完善 -->
	<insert id="completeUserInfo" parameterType="com.bonc.medicine.entity.user.User">
		insert into common_user values(
			#{id},#{name},#{wetchat},#{password},#{telephone},#{email},#{sex},#{birthDate},#{address},
			#{status},#{updateTime},#{headPortrait}
		)
	</insert>


	<insert id="signUp" parameterType="Map">
		insert into
		  common_user
		    (name,telephone, password, status, update_time)
		values
		    (#{name}, #{phone}, #{password}, '1', #{updateTime})
	</insert>

    <select id="getIdByPhone" parameterType="String" resultType="Map">
       select id from common_user where telephone = #{phone}
    </select>

    <update id="updatePassword" parameterType="Map">
        update
          ${tableName}
        set
          password = #{password},
          update_time = #{updateTime}
        where 1 = 1
		<if test="phone != null and phone != ''">
			and telephone = #{phone}
		</if>
		<if test="userId != null and userId != ''">
			and id = #{userId}
		</if>



    </update>

    <select id="getTableByPhone" parameterType="Map" resultType="Map">
        SELECT
	      'common_user' AS table_name,
	      telephone
        FROM
	      common_user
        WHERE
	      telephone = #{phone}
        UNION
	    SELECT
		  'common_backend_user' AS table_name,
		  telephone
	    FROM
		  common_backend_user
	    WHERE
		  telephone = #{phone}
    </select>

	<select id="login" parameterType="Map" resultType="Map">
		select
			id,telephone, name, address, head_portrait
		from
			 ${tableName}
		where
			 telephone = #{phone}
			 and password = #{password}

	</select>

	<select id="loginSecond" parameterType="Map" resultType="Map">
		SELECT
			cu.id,
			cu.telephone,
			cu.name,
			cu.address,
			cu.head_portrait,
			GROUP_CONCAT(cll.role_id) as role_id,
			GROUP_CONCAT(crr.role_name) as role_name
		FROM
			common_user cu
			LEFT JOIN common_user_role_rel cll ON cu.id = cll.user_id
			LEFT JOIN common_role crr ON cll.role_id = crr.id
		WHERE  1  = 1
				<if test="phone != null and phone != ''">
					and  cu.telephone = #{phone}
				</if>
				<if test="userId != null and userId != ''">
					and  cu.id = #{userId}
				</if>

			 and cu.password = #{password}
		ORDER BY cll.role_id

	</select>

	<select id="backUser" parameterType="Map" resultType="Map">
		SELECT
			cu.id,
			cu.telephone,
			cu.name,
			cu.address,
			cu.head_portrait,
			GROUP_CONCAT(cll.backend_role_id) as role_id,
			GROUP_CONCAT(crr.role_name) as role_name
		FROM
			common_backend_user cu
			LEFT JOIN common_backend_user_role_r cll ON cu.id = cll.backend_user_id
			LEFT JOIN common_backend_user_role crr ON cll.backend_role_id = crr.id
		WHERE  1 =  1

			 and cu.password = #{password}
			<if test="phone != null and phone != ''">
				and  cu.telephone = #{phone}
			</if>
			<if test="userId != null and userId != ''">
				and  cu.id = #{userId}
			</if>
		ORDER BY cll.backend_role_id
	</select>

    <select id="getUserInfoById" parameterType="String" resultType="Map">
  			SELECT
				cu.id,
				cu.name,
				cu.wetchat,
				cu.telephone,
				cu.email,
				cu.sex,
				cu.address,
				cu.head_portrait,
				sis.expertise_field,
				sis.employment_age ,
				GROUP_CONCAT(cmmv.variety_name) as loveVariety,
				sst.active_count,
				sst.interact_count
			FROM
				common_user cu
				LEFT JOIN spec_info sis ON cu.id = sis.spec_id
				LEFT JOIN  common_user_care_varieties_r curr on cu.id=curr.user_id
				LEFT JOIN common_medicine_variety cmmv on curr.variety_code=cmmv.variety_code
				left join spec_interact_stats sst on cu.id = sst.spec_id
           where cu.id = #{userId}

            limit 1
    </select>


	<select id="interfaceForBackAfterLogin" parameterType="String" resultType="Map">
		SELECT
			cu.`name`,
			cu.head_portrait,
			cu.id,
			MAX( cll.login_time ) AS login_time,
			GROUP_CONCAT( DISTINCT cccr.id ) AS role_id,
			GROUP_CONCAT( DISTINCT cccr.role_name ) AS role_name
		FROM
			common_logon_log cll
			RIGHT JOIN common_backend_user cu ON cll.user_id = cu.id
			LEFT JOIN common_backend_user_role_r urr ON cu.id = urr.backend_user_id
			LEFT JOIN common_backend_user_role cccr ON urr.backend_role_id = cccr.id
		WHERE
			cu.id = #{userId}

	</select>

	<update id="forgetPassword" parameterType="Map">
		update
			${tableName}
		set
		password = #{password},
		update_time = #{updateTime}
		where

			telephone = #{phone}
	</update>

	<update id="updateUserTelephoneNumber" parameterType="Map">

		update
			common_user
		set telephone = #{phone}
		where
			id = #{userId}

	</update>
</mapper>
