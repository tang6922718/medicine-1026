<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.bonc.medicine.mapper.mall.MeetProfessorMapper">

	<select id="queslist" parameterType="Map" resultType="Map">
		SELECT
		a.id,
		d.id as man_id,
		d.NAME,
		a.issue_time,
		a.issue_desc,
		c.NAME as
		expert,
		'' AS assit,
		a.issue_status,
		a.score,
		a.follow_days,
		a.is_revisited,
		a.is_public
		FROM
		spec_issue a left join
		spec_issue_association b on a.id = b.issueid
		left join spec_info c on
		b.specid = c.spec_id
		left join common_user d on d.id = a.issue_user_id
		WHERE
		b.is_assigned = '0'
		<if test="issue_status != null and issue_status != '全部'">
			AND issue_status LIKE
			CONCAT(CONCAT('%',#{issue_status,jdbcType=VARCHAR}),'%')
		</if>
		<if test="revisited != null and revisited != '全部'">
			AND is_revisited LIKE CONCAT(CONCAT('%',#{revisited
			,jdbcType=VARCHAR}),'%')
		</if>
	</select>

	<select id="assistlist" parameterType="Map" resultType="Map">
		SELECT
		a.issueid,
		GROUP_CONCAT( b.NAME ) AS assit
		FROM
		spec_issue_association a
		LEFT JOIN spec_info b ON a.specid = b.spec_id
		WHERE
		a.is_assigned = '1'
		GROUP BY
		a.issueid
	</select>

	<update id="revisited" parameterType="Map">
		update spec_issue set revisited_mark = #{comment}
		<if test="close != null and close == '1'">
			,issue_status = '3'
		</if>
		where id = #{id}
	</update>

	<insert id="anli" parameterType="com.bonc.medicine.entity.mall.Case"
		useGeneratedKeys="true" keyProperty="id">
		insert into
		spec_case(title,varieties,content,issue_id,publish_time)
		values(#{title},#{varieties},#{content},#{issue_id},#{publish_time})
	</insert>

	<select id="queryIssue" parameterType="Map" resultType="Map">
		select *
		from spec_issue where id = #{issue_id}
	</select>

	<insert id="addCaseNotice" parameterType="Map">
		insert into
		common_notice(notice_type,object_id,notice_content,notice_receiver,publish_time,status,state)
		values('1',#{object_id},#{notice_content},#{notice_receiver},now(),'1','1')
	</insert>

	<update id="setAnli" parameterType="Map">
		update spec_issue set
		is_public = '1' where id = #{issue_id}
	</update>

	<select id="untreated" parameterType="Map" resultType="Map">
		SELECT
		a.id,
		b.NAME,
		b.head_portrait,
		a.issue_desc,
		TIMESTAMPDIFF( SECOND,
		a.issue_time, now( ) )
		AS time
		FROM
		spec_issue a,
		common_user b,
		spec_issue_association c
		WHERE
		a.issue_user_id = b.id
		AND a.issue_status
		= '0'
		AND c.issueid = a.id
		AND
		is_assigned = '0'
		AND c.specid = #{spec_id}
		UNION ALL
		SELECT
		a.id,
		'邀请我的'
		AS NAME,
		b.head_portrait,
		a.issue_desc,
		TIMESTAMPDIFF( SECOND, a.issue_time, now( ) ) AS
		time
		FROM
		spec_issue a,
		common_user b,
		spec_issue_association c
		WHERE
		a.issue_user_id = b.id
		AND
		a.issue_status = '0'
		AND c.issueid = a.id
		AND
		c.is_assigned = '1'
		AND
		c.specid = #{spec_id}
	</select>

	<select id="solved" parameterType="Map" resultType="Map">
		SELECT
		d.name,
		d.address,
		d.head_portrait,
		c.issue_status,
		TIMESTAMPDIFF( SECOND,
		c.issue_time, now( ) )
		AS issue_time,
		c.issue_desc,
		c.score,
		c.id as
		issue_id
		FROM
		spec_info a
		LEFT JOIN
		spec_issue_association b ON a.spec_id
		= b.specid AND ( b.is_assigned = '0' OR b.is_assigned = '1' )
		LEFT JOIN
		spec_issue c ON b.issueid = c.id
		AND ( c.issue_status = '2' OR
		c.issue_status = '3' )
		LEFT JOIN
		common_user d ON c.issue_user_id = d.id
		WHERE
		a.spec_id = #{spec_id} and
		c.id is not null
	</select>

	<select id="solving" parameterType="Map" resultType="Map">
		SELECT
		temp.issue_desc,
		temp.id,
		temp.from_uid,
		temp.to_uid,
		TIMESTAMPDIFF(
		SECOND, temp.reply_time, now( ) )
		AS reply_time,
		temp.content,
		cu.NAME,
		cu.head_portrait,
		cu.address,
		GROUP_CONCAT(DISTINCT cmv.variety_name) as
		variety_name
		FROM
		(
		SELECT
		b.*,
		p.from_uid,
		p.to_uid,
		p.reply_time,
		p.content
		FROM
		(
		SELECT
		issue_desc,
		(
		SELECT
		cc.id AS issue_id
		FROM
		common_comment cc
		WHERE
		cc.object_id = a.id
		AND cc.object_type = '1'
		ORDER BY
		cc.reply_time DESC
		LIMIT 1
		) common_id,
		a.id as id,
		a.issue_user_id
		FROM
		spec_issue a
		WHERE
		EXISTS (
		SELECT 1 FROM common_comment t WHERE
		t.object_id = a.id AND
		t.object_type = '1'
		)
		) b
		INNER JOIN
		common_comment p ON p.id = b.common_id
		)
		temp
		LEFT JOIN
		common_user cu ON temp.issue_user_id = cu.id
		LEFT JOIN
		common_user_care_varieties_r ccv on cu.id=ccv.user_id
		LEFT JOIN
		common_medicine_variety cmv on ccv.variety_code=cmv.variety_code
		WHERE
		temp.to_uid =
		#{spec_id} or temp.from_uid = #{spec_id}
		group by temp.id
	</select>

	<select id="issue_statistics_solving" parameterType="Map"
		resultType="Map">
		select count(1) as jxz from (SELECT
		temp.issue_desc,
		temp.id,
		temp.from_uid,
		temp.to_uid,
		temp.reply_time,
		temp.content,
		cu.NAME,
		cu.head_portrait,
		cu.address
		FROM
		(
		SELECT
		b.*,
		p.from_uid,
		p.to_uid,
		p.reply_time,
		p.content
		FROM
		(
		SELECT
		issue_desc,
		(
		SELECT
		cc.id AS
		issue_id
		FROM
		common_comment cc
		WHERE
		cc.object_id = a.id
		AND
		cc.object_type = '1'
		ORDER BY
		cc.reply_time DESC
		LIMIT 1
		) id
		FROM
		spec_issue a
		WHERE
		EXISTS ( SELECT 1 FROM common_comment t WHERE
		t.object_id = a.id AND
		t.object_type = '1' )
		) b
		INNER JOIN
		common_comment p ON p.id = b.id
		) temp
		LEFT JOIN common_user cu ON
		temp.from_uid = cu.id
		WHERE
		temp.to_uid = #{spec_id}
		or temp.from_uid =
		#{spec_id}
		) as temp
	</select>


	<select id="issue_statistics_untreated" parameterType="Map"
		resultType="Map">
		SELECT
		count( 1 ) AS wcl
		FROM
		(
		SELECT
		a.id,
		b.NAME,
		a.issue_desc,
		TIMESTAMPDIFF( SECOND, a.issue_time, now( ) )
		AS time
		FROM
		spec_issue a,
		common_user b,
		spec_issue_association c
		WHERE
		a.issue_user_id = b.id
		AND a.issue_status = '0'
		AND c.issueid = a.id
		AND
		is_assigned = '0'
		AND c.specid = #{spec_id} UNION ALL
		SELECT
		a.id,
		'邀请我的'
		AS NAME,
		a.issue_desc,
		TIMESTAMPDIFF( SECOND, a.issue_time,
		now( ) ) AS
		time
		FROM
		spec_issue a,
		common_user b,
		spec_issue_association c
		WHERE
		a.issue_user_id = b.id
		AND a.issue_status = '0'
		AND c.issueid = a.id
		AND
		c.is_assigned = '1'
		AND c.specid = #{spec_id}
		) AS wcl
	</select>

	<select id="expert" parameterType="Map" resultType="Map">
		select specid
		from spec_issue_association where is_assigned = '1' and issueid =
		#{id}
	</select>

	<delete id="deleteInvitation" parameterType="Map">
		delete from
		spec_issue_association where is_assigned = '1' and issueid = #{id}
	</delete>

	<update id="setSolving">
		update spec_issue set issue_status = '1' where id =
		#{id}
	</update>

	<update id="setRevisit" parameterType="Map">
		update spec_issue set
		follow_days = #{follow_days},revisit_url =
		#{revisit_url},revisited_advice = #{revisited_advice}
		where id = #{id}
	</update>

	<update id="setCase" parameterType="Map">
		update spec_issue set
		case_detail = #{case_detail} ,case_title = #{case_title} ,
		case_varieties = #{case_varieties}
		where id = #{id}
	</update>

	<update id="eddIssue" parameterType="Map">
		update spec_issue set
		revisited_mark = #{revisited_mark} ,is_revisited
		= '1'
		<if test="issue_status != null and issue_status != ''">
			, issue_status =#{issue_status}
		</if>
		where id = #{id}
	</update>

	<insert id="Invitation" parameterType="Map">
		insert into
		spec_issue_association(issueid,specid,is_assigned)
		values(#{id},#{expert_id},'1');
	</insert>

	<insert id="addInvitationNotice" parameterType="Map">
		insert into
		common_notice(notice_type,object_id,notice_content,publish_user_id,notice_receiver,publish_time,status,state)
		values('3',#{id},#{notice_content},#{user_id},#{expert},now(),'1','1')
	</insert>

	<update id="end" parameterType="Map">
		update spec_issue set
		issue_status = '2' , score = #{score} where id = #{id}
	</update>

	<select id="articlelist" parameterType="Map" resultType="Map">
		select
		id,title,publish_time,img_url from spec_article where spec_id = #{id}
	</select>

	<select id="fileManage" parameterType="Map" resultType="Map">
		select id,title,file_size,upload_time,status,file_url from
		spec_upload_file where 1 = 1
		<if test="title != null and title != ''">
			AND title = #{title}
		</if>
		<if test="starttime != null and starttime != ''">
			AND starttime = #{starttime}
		</if>
		<if test="endtime != null and endtime != ''">
			AND endtime = #{endtime}
		</if>
		<if test="status != null and status == '未审阅'">
			AND status = '0'
		</if>
		<if test="status != null and status == '已审阅'">
			AND status <![CDATA[ <> ]]>
			'0'
		</if>
	</select>

	<update id="articleStatus" parameterType="Map">
		update spec_article set
		status = #{status} where id = #{id}
	</update>

	<update id="aduitArticle" parameterType="Map">
		update spec_article set
		is_audit = #{is_audit} , fail_opinion = #{fail_opinion} where id =
		#{id}
	</update>

	<insert id="addArticle" parameterType="com.bonc.medicine.entity.mall.Article">
		insert into
		spec_article(title,article_type,author,label,spec_id,publish_time,content,effect_flag,img_url,status,fail_opinion,is_audit,create_user_id)
		values(#{title},#{article_type},#{author},#{label},#{spec_id},now(),#{content},#{effect_flag},#{img_url},'0',#{fail_opinion},'0',#{create_user_id});
	</insert>

	<update id="updateArticle" parameterType="com.bonc.medicine.entity.mall.Article">
		update
		spec_article set
		title = #{title},
		article_type = #{article_type},
		author = #{author},
		spec_id = #{spec_id},
		content = #{content},
		update_time = #{update_time},
		is_audit = '0'
		<if test="img_url != null and img_url != ''">
			,img_url = #{img_url}
		</if>
		where id = #{id}
	</update>
	<select id="getArticlelist" parameterType="Map" resultType="Map">
		select id,title,'文章类型' as type,publish_time from spec_article where
		status = '0' and is_audit = '0'
		<if test="key != null and key != ''">
			and title like CONCAT(CONCAT('%',#{key}),'%')
		</if>
	</select>
	<select id="queryArticleList" parameterType="Map" resultType="Map">
		SELECT concat(concat(u.name,"("),u.telephone,")") as name_tel
		,u.id,u.name name
		FROM
		common_user u INNER JOIN spec_info s on
		u.id=s.spec_id
	</select>
</mapper>
